#ifdef GL_ES
precision mediump float;
#endif

#extension GL_OES_standard_derivatives : enable

uniform float alpha;
uniform float time;
uniform vec2 resolution;

void main( void ) {
	vec2 res = resolution.xy;
	vec2 p = 2.*(gl_FragCoord.xy-res/2.) / res.y;
	float f=0., r;
    
	
	const float I = 16.;
	for(float i=1.; i<=I; i++) {
		if(length(p)<1.) {
			r = cos(time*.2+.3*i)/2.;
			if(p.x<2.*r) {
			p.x -= r-.5;
			p /= r+.5;
		}
		else {
			p.x -= r+.5;
			p /= r-.5;
		}
		f = i/I;
	}
    }
    
	//gl_FragColor = vec4(vec3(1., .65, .5)*vec3(f), alpha);
	gl_FragColor = vec4(fract(p),fract(f),alpha);
}
