$HEADER$

uniform float alpha;
uniform float contrast;
uniform float time;
uniform vec2 resolution;
uniform vec4 tint_ink;

#define TAU 6.28318530718
#define MAX_ITER 15

void main( void ) {
 float t = time * 0.26;
 // uv should be the 0-1 uv of texture...
 vec2 xy = gl_FragCoord.xy / resolution.yy -vec2(0.2);
 vec2 uv = vec2(atan(xy.y , xy.x), log(length(xy)) * 0.7 - time / 20.0);  //atan(xy.y, xy.x) * 4.0 / TAU,
 vec2 p = mod(uv*TAU, TAU)-270.0;
 vec2 i = vec2(p);
 float c = 8.6;
 float intensity = contrast / 100.0;  //.0042;

 for (int n = 0; n < MAX_ITER; n++) {
  float t = t * (1.0 - (3.5 / float(n+1)));
  i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));
  c += 1.0/length(vec2(p.x / (sin(i.x+t)/intensity),p.y / (cos(i.y+t)/intensity)));
 }
 c /= float(MAX_ITER);
 c = 1.27-pow(c, 5.0);
 vec3 colour = vec3(pow(abs(c), 8.0));
 //colour = clamp(colour + vec3(0.0, 0.22, 0.23), 0.0, 1.0);
 colour = clamp(colour + tint_ink.rgb, 0.0, 1.0);

 gl_FragColor = vec4(colour, alpha);
 vec4 tex = texture2D(texture0, tex_coord0);
}
