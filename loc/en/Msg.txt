{
#==================================
#---- OVERWRITING ae.gui_help -----
"help_app_state#sound_volume": """\
change sound volume

tap all to the left
to mute all sounds and to hide
all shader animations.

current value: [b]{round(self.value * 100)}%[/b]

Use 'lambda: main_app.sound_volume'
expression for to dynamically change
shader arguments.""",
#----------------------------------
#---- OVERWRITING ae.gui_help -----
"help_app_state#vibration_volume": """\
vibration intensity

tap all to the left for
to mute all vibrations.

current vibration: {round(self.value * 100)}%

Use 'lambda: main_app.vibration_volume'
expression for to dynamically change
shader arguments.""",
#----------------------------------
#---- OVERWRITING ae.gui_help -----
"help_app_state#render_frequency": """\
adjust the animation frequency of the
shader ticker.

current frequency: {round(self.value)}Hz

By moving the slider all to the left the
shader ticker will be disabled and a
'tick' button will appear to manually
advance the shader animation.""",
#==================================
"help_flow#add_shader": """\
tap to add a new
instance of the
specified shader
file.""",
"help_flow#open_file_chooser:shader_filename": """\
tap to open the
file chooser to
load the next
shader file.""",
"help_flow#del_shader": """\
tap to remove this
running shader.""",
"help_flow#shader_arg_alpha": """\
enter a float value between
0.0 and 1.0 to set the
{main_app.get_txt_(self.alias_name)} shader argument.

This value get interpreted
by most shaders as opacity.

To change this value dynamically
on a running shader specify a
lambda expression like e.g.
'lambda: main_app.sound_volume'.""",
"help_flow#shader_arg_center_pos": """\
enter a tuple of two float
values or a lambda expression
to set the {main_app.get_txt_(self.alias_name)}
shader argument.

Most shaders use this value
as center position (x,y)
for the shader animation.

The 'main_app.last_touch.pos'
expression can be used
to pass the last touch
position on the render
widget to the shader.
""",
"help_flow#shader_arg_contrast": """\
enter a float value or
a lambda expression to
set the {main_app.get_txt_(self.alias_name)}
shader argument.""",
"help_flow#shader_arg_mouse": """\
enter a tuple of two
float values or a
lambda expression to
set the {main_app.get_txt_(self.alias_name)}
shader argument.""",
"help_flow#shader_arg_start_time": """\
enter either 'None', a
float value or a lambda
expression to set this
{main_app.get_txt_(self.alias_name)} shader
argument.

entering '0.0' will
synchronize the `time`
shader argument with
the render tick/clock.

enter 'None' to start
the `time` shader
argument from zero.""",
"help_flow#shader_arg_tex_col_mix": """\
enter a float value or
a lambda expression to
set the {main_app.get_txt_(self.alias_name)}
shader argument.""",
"help_flow#shader_arg_tint_ink": """\
enter a tuple of four float values or
a lambda expression to specify the
{main_app.get_txt_(self.alias_name)} shader argument.

Use one of the user preference colors
in a lambda expression to dynamically
change the color of a running shader.
E.g. to use the Color 1 enter the lambda
expression 'lambda: main_app.flow_id_ink'.

Color 2 get represented by 'flow_path_ink',
Color 3 by 'selected_item_ink' and
Color 4 by 'unselected_item_ink'.""",
"help_flow#shader_filename": """\
enter the path of the
shader code file or
tap on the ... button
on the right for to
select a file via the
file chooser.""",
"help_flow#next_render_tick": """\
tap to manually advance the
shader time by one tick.""",
"help_flow#toggle_tool_box": """\
tap for to {'open' if self.state == 'down' else 'close'} the
tool box for to modify
the shader arguments.""",
#==================================
#---- OVERWRITING ae.gui_help -----
"flow_id_ink": "color 1{' (main_app.flow_id_ink)' if app.landscape else ''}",
"flow_path_ink": "color 2{' (main_app.flow_path_ink)' if app.landscape else ''}",
"selected_item_ink": "color 3{' (main_app.selected_item_ink)' if app.landscape else ''}",
"unselected_item_ink": "color 4{' (main_app.unselected_item_ink)' if app.landscape else ''}",
}
