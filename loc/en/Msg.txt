{
#==================================
#---- OVERWRITING ae.gui_help -----
"help_app_state#sound_volume": """\
change sound volume

tap all to the left to mute sounds.

current value: [b]{round(self.value * 100)}[/b]%

use 'lambda: gt_app.sound_volume'
expression (or short 's') to
dynamically change a shader argument.""",
#----------------------------------
#---- OVERWRITING ae.gui_help -----
"help_app_state#vibration_volume": """\
vibration intensity

tap all to the left to mute all
vibrations.

current vibration: [b]{round(self.value * 100)}[/b]%

use 'lambda: gt_app.vibration_volume'
expression to dynamically change
a shader argument.""",
#----------------------------------
#---- OVERWRITING ae.gui_help -----
"help_app_state#render_frequency": """\
adjust the animation frequency of the
shader ticker.

current frequency: [b]{round(self.value)}[/b]Hz

by moving the slider all to the left the
shader ticker will be disabled and a
'tick' button will appear to manually
advance the shader animation.""",
#==================================
"help_flow#add_shader": """\
add another instance of the
currently selected shader [b]{main_app.shaders_idx}[/b].""",
#----------------------------------
"help_flow#del_shader": """\
remove the currently
selected shader [b]{main_app.shaders_idx}[/b].""",
#----------------------------------
"help_flow#open_file_chooser:shader_filename": """\
open the file chooser to
load the other file for
the shader [b]{main_app.shaders_idx}[/b].""",
#----------------------------------
"help_flow#run_shader": """\
{"stop" if main_app.shaders_args[main_app.shaders_idx]['run_state'] == 'running' else "run"} the
shader [b]{main_app.shaders_idx}[/b].""",
#----------------------------------
"help_flow#sel_shader": """\
select the shader [b]{self.text.split('==')[0]}[/b]
to edit the shader
arguments.

the button of the
selected shader is
displayed with the
doubled width.{'''
(this shader got
already selected)''' if main_app.shaders_idx == int(self.text.split('==')[0]) else ""}""",
#----------------------------------
"help_flow#edit_shader_arg:alpha": """\
enter a float value between
0.0 and 1.0 to set the
[b]{main_app.get_txt_(self.alias_name)}[/b] shader argument.

This value get interpreted by
most shaders as opacity.

To change this value dynamically
on a running shader specify a
lambda expression like e.g.
'lambda: gt_app.sound_volume'
(or short 's').""",
#----------------------------------
"help_flow#edit_shader_arg:center_pos": """\
enter a tuple of two float values or a
lambda expression to set the shader
argument [b]{main_app.get_txt_(self.alias_name)}[/b].

Most shaders use this value as center
position (x,y) for the shader animation.

the expressions 'gt_app.last_touch'
(short 'L') or 'gt_app.mouse_pos'
(short 'M') can be used to dynamically
set this shader argument of a running
shader to the last touch/mouse position.""",
#----------------------------------
"help_flow#edit_shader_arg:contrast": """\
enter a float value or
a lambda expression to
set the [b]{main_app.get_txt_(self.alias_name)}[/b]
shader argument.""",
#----------------------------------
"help_flow#edit_shader_arg:mouse": """\
enter a tuple of two
float values or a
lambda expression to
set the [b]{main_app.get_txt_(self.alias_name)}[/b]
shader argument.""",
#----------------------------------
"help_flow#edit_shader_arg:start_time": """\
enter either a float value, or a lambda
expression in this shader argument
[b]{main_app.get_txt_(self.alias_name)}[/b].

entering 0.0 will synchronize the
shader with the render tick/clock.

e.g. to run shader animation reversed
reversed enter the lambda expression
'lambda: T() * 2.0'. T represents the
tick/clock value (Clock.get_boottime).""",
#----------------------------------
"help_flow#edit_shader_arg:tex_col_mix": """\
enter either a float value, or
a lambda expression to control the
[b]{main_app.get_txt_(self.alias_name)}[/b] argument.""",
#----------------------------------
"help_flow#edit_shader_arg:tint_ink": """\
enter a tuple of four float values, or a
lambda expression to specify the shader
argument [b]{main_app.get_txt_(self.alias_name)}[/b].

Use one of the user preference colors in
a lambda expression to dynamically change
the color of a running shader, e.g. to use
the Color 1 enter the lambda expression
'lambda: gt_app.flow_id_ink'.

Color 2 get represented by 'flow_path_ink',
Color 3 by 'gt_app.selected_item_ink' and
Color 4 by 'gt_app.unselected_item_ink'.""",
#----------------------------------
"help_flow#edit_shader_arg:shader_filename": """\
enter the path of the
shader code file or tap
on the [b]...[/b] button on
the left to select a shader
file via the file chooser.""",
#----------------------------------
"help_flow#next_render_tick": """\
manually advance the shader
time by one tick/frame.""",
#----------------------------------
"help_flow#toggle_tool_box": """\
{'open' if self.state == 'down' else 'close'} the tool box to modify
the shader arguments.""",
#==================================
'tour_page#gt_screen_layout':
    {'fade_out_app': 0.111,
     'page_text': """\
test glsl shader-file with dynamic arguments.

shader-file and -arguments are at the top. the
shader-output fills the rest of this window.""", },
#----------------------------------
'tour_page#gt_choose_shader_file':
    {'page_text': "choosing shader-file",
     'tip_text': "=edit_shader_arg:shader_filename", },
#----------------------------------
'tour_page#gt_run_pause_shader':
    {'page_text': "start/pause shader",
     'tip_text': """\
this button is starting/pausing
the currently selected shader.""", },
#----------------------------------
'tour_page#gt_enter_shader_args':
    {'fade_out_app': 0.3,
     'page_text': """\
the arguments of [b]uniform[/b]-parameters
of the selected shader-file can be set via
the targeted/highlighted entry fields.""", },
#----------------------------------
'tour_page#gt_pos_shader_arg':
    {'fade_out_app': 0.21,
     'page_text': "dynamic center-position",
     'tip_text': "=edit_shader_arg:center_pos", },
#----------------------------------
'tour_page#gt_shader_slots':
    {'page_text': "select shader",
     'tip_text': """\
each of these oval buttons represents a shader.
tap to select the shader, to display or change
the shader arguments or run status.

the run status of each shader gets displayed in
the button text after the [b]==[/b]-characters.""", },
#----------------------------------
'tour_page#gt_add_del_shader':
    {'fade_out_app': 0.6,
     'page_text': "add/remove shader",
     'tip_text': """\
the currently selected shader has a button with the double
width. clone it by tapping on the [b]+[/b]-button to the
left, or remove it with the button underneath.""", },
#----------------------------------
'tour_page#gt_multiple_shaders':
    {'fade_out_app': 0.0,
     'tip_text': """\
to combine multiple shaders, the alpha or
opacity argument has to be less than 1.0.""", },
#==================================
#---- OVERWRITING ae.gui_help -----
"flow_id_ink": "color 1{' (gt_app.flow_id_ink)' if app.landscape else ''}",
"flow_path_ink": "color 2{' (gt_app.flow_path_ink)' if app.landscape else ''}",
"selected_item_ink": "color 3{' (gt_app.selected_item_ink)' if app.landscape else ''}",
"unselected_item_ink": "color 4{' (gt_app.unselected_item_ink)' if app.landscape else ''}",
}
